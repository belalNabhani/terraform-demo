name: Dev release

on:
  push:
    branches:
      - dev

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7
      - name: Terraform format
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        id: plan
        run: terraform plan -var secret_key=${{secrets.SECRET_KEY_DEV}}
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details>
            <summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.5'

      - name: Terraform apply
        run: terraform apply -auto-approve -var _DEV=${{secrets.SECRET_KEY_DEV}}

      - name: Terratest Execution
        working-directory: tests
        run: |
          go test . -v timeout 10m
